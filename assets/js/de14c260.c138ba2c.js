(self.webpackChunkdoc_ops=self.webpackChunkdoc_ops||[]).push([[2941],{2948:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var r=t(2122),o=t(9756),i=(t(7294),t(3905)),a=["components"],c={description:"How to run a Wasp node in using Docker. Build the image, configure it, run it.",image:"/img/logo/WASP_logo_dark.png",keywords:["ISCP","Smart Contracts","Running a node","docker","image","build","configure","arguments"]},u="Docker",l={unversionedId:"misc/docker",id:"misc/docker",isDocsHomePage:!1,title:"Docker",description:"How to run a Wasp node in using Docker. Build the image, configure it, run it.",source:"@site/docs/misc/docker.md",sourceDirName:"misc",slug:"/misc/docker",permalink:"/docs/misc/docker",editUrl:"https://github.com/iotaledger/chronicle.rs/tree/main/docs/docs/misc/docker.md",version:"current",frontMatter:{description:"How to run a Wasp node in using Docker. Build the image, configure it, run it.",image:"/img/logo/WASP_logo_dark.png",keywords:["ISCP","Smart Contracts","Running a node","docker","image","build","configure","arguments"]},sidebar:"tutorialSidebar",previous:{title:"Running a Node",permalink:"/docs/guide/chains_and_nodes/running-a-node"},next:{title:"Configuring wasp-cli",permalink:"/docs/guide/chains_and_nodes/wasp-cli"}},s=[{value:"Introduction",id:"introduction",children:[]},{value:"Running a Wasp Node",id:"running-a-wasp-node",children:[{value:"Configuration",id:"configuration",children:[]}]}],d={toc:s};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"docker"},"Docker"),(0,i.kt)("p",null,"This page describes the configuration of the Wasp node in combination with Docker."),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"The Dockerfile is separated into several stages which effectively splits Wasp into four small pieces:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Testing",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Unit testing"),(0,i.kt)("li",{parentName:"ul"},"Integration testing"))),(0,i.kt)("li",{parentName:"ul"},"Wasp CLI"),(0,i.kt)("li",{parentName:"ul"},"Wasp Node")),(0,i.kt)("h2",{id:"running-a-wasp-node"},"Running a Wasp Node"),(0,i.kt)("p",null,"Checkout the project, switch to 'develop' and build the main image:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git clone -b develop https://github.com/iotaledger/wasp.git\ncd wasp\ndocker build -t wasp-node .\n")),(0,i.kt)("p",null,"The build process will copy the docker_config.json file into the image, which will use it when the node gets started. "),(0,i.kt)("p",null,"By default, the build process will use ",(0,i.kt)("inlineCode",{parentName:"p"},"-tags rocksdb")," as a build argument. This argument can be modified with ",(0,i.kt)("inlineCode",{parentName:"p"},"--build-arg BUILD_TAGS=<tags>"),"."),(0,i.kt)("p",null,"Depending on the use case, Wasp requires a different GoShimmer hostname which can be changed at this part inside the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/wasp/blob/develop/docker_config.json"},"docker_config.json")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  "nodeconn": {\n    "address": "goshimmer:5000"\n  },\n')),(0,i.kt)("p",null,"After the build process has finished, you can start your Wasp node by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker run wasp-node\n")),(0,i.kt)("h3",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"After the build process has been completed, it is still possible to inject a different configuration file into a new container by running: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ docker run -v $(pwd)/alternative_docker_config.json:/etc/wasp_config.json wasp-node\n")),(0,i.kt)("p",null,"You can also add further configuration using arguments:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker run wasp-node --nodeconn.address=alt_goshimmer:5000 \n")),(0,i.kt)("p",null,"To get a list of all available arguments, run the node with the argument '--help'"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker run wasp-node --help\n")))}p.isMDXComponent=!0},3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return g}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(t),g=o,m=p["".concat(u,".").concat(g)]||p[g]||d[g]||i;return t?r.createElement(m,a(a({ref:n},s),{},{components:t})):r.createElement(m,a({ref:n},s))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);